{"version":3,"sources":["App.js","redux/actions/actions.js","reportWebVitals.js","redux/reducers/reducer-todo.js","redux/rootReducer.js","index.js"],"names":["App","onSubmitForm","ev","preventDefault","items","term","length","filter","item","title","toLowerCase","indexOf","filterNew","done","important","elements","this","filters","search","props","todoArray","inputSearch","filterItem","map","elem","className","clz","concat","onClick","onClickDone","id","onClickDelete","onClickImportant","Math","random","button","buttons","label","clazz","type","onFilterChang","placeholder","value","onChange","onSearch","onSubmit","htmlFor","inputValue","onAddTitle","disabled","onAdd","Component","connect","todo","dispatch","idn","payload","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","itemId","itemDone","ind","findIndex","el","newItem","slice","itemImportant","itemDeleted","newArray","itemAdd","newItemTitle","inp","filterChange","newFilter","combineReducers","state","action","target","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","next","result","console","log","getState","Thunk","app","ReactDOM","render","document","getElementById"],"mappings":"gRAgBMA,E,4MAEJC,aAAe,SAAAC,GACbA,EAAGC,kB,qDAGEC,EAAOC,GACZ,OAAoB,IAAhBA,EAAKC,OACAF,EAEFA,EAAMG,QAAO,SAAAC,GAClB,OAAOA,EAAKC,MAAMC,cAAcC,QAAQN,EAAKK,gBAAkB,O,8BAI3DN,EAAOQ,GACb,OAAQA,GACN,IAAK,MACH,OAAOR,EACT,IAAK,SACH,OAAOA,EAAMG,QAAO,SAAAC,GAAI,OAAKA,EAAKK,QACpC,IAAK,OACH,OAAOT,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKK,QACnC,IAAK,YACH,OAAOT,EAAMG,QAAO,SAAAC,GAAI,OAAIA,EAAKM,aACnC,QACE,OAAOV,K,+BAOH,IAAD,OAGDW,EADeC,KAAKC,QAAQD,KAAKE,OAAOF,KAAKG,MAAMC,UAAWJ,KAAKG,MAAME,aAAcL,KAAKG,MAAMG,YAC1EC,KAAI,SAAAC,GAEhC,IAAIC,EAAYD,EAAKX,KAAO,gBAAkB,YAC1Ca,EAAMF,EAAKV,UAAY,sBAAwB,YAEnD,OACI,cAAC,WAAD,UACE,sBAAKW,UAAW,OAAhB,UACE,qBAAKA,UAAWA,EAAUE,OAAOD,GAC5BE,QAAS,kBAAM,EAAKT,MAAMU,YAAYL,EAAKM,KADhD,SAEGN,EAAKf,QAER,wBAAQmB,QAAS,kBAAM,EAAKT,MAAMY,cAAcP,EAAKM,KAAKL,UAAW,SAArE,oBACA,wBAAQG,QAAS,kBAAM,EAAKT,MAAMa,iBAAiBR,EAAKM,KAAKL,UAAW,SAAxE,sDAPWQ,KAAKC,OAAOV,EAAKM,QAchCK,EAASnB,KAAKG,MAAMiB,QAAQb,KAAI,YAAoB,IAAlBC,EAAiB,EAAjBA,KAAMa,EAAW,EAAXA,MAGtCC,EADW,EAAKnB,MAAMG,aAAeE,EAClB,WAAa,wBACtC,OAEI,wBACIe,KAAK,SACLd,UAAS,iBAAYa,GACrBV,QAAS,kBAAM,EAAKT,MAAMqB,cAAchB,IAH5C,SAMGa,GAFMA,MAYf,OAEI,sBAAKZ,UAAW,MAAhB,UAEE,6GAAoBT,KAAKG,MAAMC,UAAUd,UACzC,uBAAOiC,KAAK,OAAOE,YAAY,oGAAoBC,MAAO1B,KAAKG,MAAME,YAC9DsB,SAAU3B,KAAKG,MAAMyB,WAC5B,sBAAMnB,UAAW,OAAjB,SACGU,IAEH,uBAAMU,SAAU7B,KAAKf,aAArB,UAEE,uBAAO6C,QAAQ,QAAf,sCAEA,uBAAOP,KAAK,OAAOG,MAAO1B,KAAKG,MAAM4B,WAAYJ,SAAU3B,KAAKG,MAAM6B,aAEtE,wBAAQC,UAAWjC,KAAKG,MAAM4B,WAAWzC,OACjCsB,QAAS,kBAAM,EAAKT,MAAM+B,MAAM,EAAK/B,MAAM4B,aAAaR,KAAK,SADrE,oBAIDxB,S,GAlGOoC,aA6HHC,mBApBf,YAAkC,IAARC,EAAO,EAAPA,KACxB,OAAO,aACL/B,WAAY+B,EAAK/B,YACd+B,MAIP,SAA4BC,GAC1B,MAAO,CACLJ,MAAO,SAACK,GAAD,OAASD,EC/HT,CACHf,KAAM,MACNiB,QD6HyBD,KAC7B1B,YAAa,SAAC0B,GAAD,OAASD,ECzHf,CACHf,KAAM,aACNiB,QDuHqCD,KACzCvB,iBAAkB,SAACuB,GAAD,OAASD,EC/FpB,CACHf,KAAM,iBACNiB,QD6F+CD,KACnDxB,cAAe,SAACwB,GAAD,OAASD,ECpHjB,CACHf,KAAM,gBACNiB,QDkHyCD,KAC7CP,WAAY,SAACO,GAAD,OAASD,EC/Gd,CACHf,KAAM,YACNiB,QD6GmCD,KACvCX,SAAU,SAACW,GAAD,OAASD,ECzGZ,CACHf,KAAM,gBACNiB,QDuGqCD,KACzCf,cAAe,SAACe,GAAD,OAASD,EC5FjB,CACHf,KAAM,gBACNiB,QD0F0CD,QAKnCH,CAA6CpD,GEjI7CyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,sBCPRQ,EAAe,CACjBC,OAAQ,IACRpB,WAAY,GACZ1B,YAAa,GACbC,WAAY,MACZF,UAAW,CACP,CAACU,GAAI,EAAGhB,WAAW,EAAOD,MAAM,EAAOJ,MAAO,SAC9C,CAACqB,GAAI,EAAGhB,WAAW,EAAOD,MAAM,EAAOJ,MAAO,QAC9C,CAACqB,GAAI,EAAGhB,WAAW,EAAOD,MAAM,EAAOJ,MAAO,SAElD2B,QAAS,CACL,CAACZ,KAAM,MAAOa,MAAO,sBACrB,CAACb,KAAM,SAAUa,MAAO,oDACxB,CAACb,KAAM,OAAQa,MAAO,sEACtB,CAACb,KAAM,YAAaa,MAAO,0CAI7B+B,EAAW,SAACf,EAAMvB,GACpB,IAAMuC,EAAMhB,EAAKjC,UAAUkD,WAAU,SAAAC,GAAE,OAAIA,EAAGzC,KAAOA,KAC/C0C,EAAO,2BAAOnB,EAAKjC,UAAUiD,IAAtB,IAA4BxD,MAAOwC,EAAKjC,UAAUiD,GAAKxD,OAEpE,MAAO,CACHO,UAFU,sBAAOiC,EAAKjC,UAAUqD,MAAM,EAAGJ,IAA/B,CAAqCG,GAArC,YAAiDnB,EAAKjC,UAAUqD,MAAMJ,EAAM,KAGtFF,OAAQd,EAAKc,SACbpB,WAAYM,EAAKN,WACjB1B,YAAagC,EAAKhC,YAClBe,QAASiB,EAAKjB,QACdd,WAAY+B,EAAK/B,aAKnBoD,EAAgB,SAACrB,EAAMvB,GACzB,IAAMuC,EAAMhB,EAAKjC,UAAUkD,WAAU,SAAAC,GAAE,OAAIA,EAAGzC,KAAOA,KAC/C0C,EAAO,2BAAOnB,EAAKjC,UAAUiD,IAAtB,IAA4BvD,WAAYuC,EAAKjC,UAAUiD,GAAKvD,YAEzE,MAAO,CACHM,UAFU,sBAAOiC,EAAKjC,UAAUqD,MAAM,EAAGJ,IAA/B,CAAqCG,GAArC,YAAiDnB,EAAKjC,UAAUqD,MAAMJ,EAAM,KAGtFF,OAAQd,EAAKc,SACbpB,WAAYM,EAAKN,WACjB1B,YAAagC,EAAKhC,YAClBe,QAASiB,EAAKjB,QACdd,WAAY+B,EAAK/B,aAKnBqD,EAAc,SAACtB,EAAMvB,GACvB,IAAMuC,EAAMhB,EAAKjC,UAAUkD,WAAU,SAAAC,GAAE,OAAIA,EAAGzC,KAAOA,KAC/C8C,EAAQ,sBAAOvB,EAAKjC,UAAUqD,MAAM,EAAGJ,IAA/B,YAAwChB,EAAKjC,UAAUqD,MAAMJ,EAAM,KACjF,OAAO,2BACAhB,GADP,IAEIjC,UAAWwD,EACXvD,YAAagC,EAAKhC,YAClBe,QAASiB,EAAKjB,QACdd,WAAY+B,EAAK/B,cAKnBuD,EAAU,SAACxB,EAAMvB,GACnB,IAAMuC,EAAMhB,EAAKjC,UAAUkD,WAAU,SAAAC,GAAE,OAAIA,EAAGzC,KAAOA,KAE3CgD,EAAe,CACjBhD,GAAIuB,EAAKc,SACTrD,WAAW,EACXD,MAAM,EACNJ,MAAO4C,EAAKN,WACZX,QAASiB,EAAKjB,SAKZ2C,EAAM1B,EAAKN,WAAa,GACxB6B,EAAQ,CAAIE,GAAJ,mBAAqBzB,EAAKjC,UAAUqD,MAAMJ,EAAM,KAElE,OAAO,2BACAhB,GADP,IAEIjC,UAAWwD,EACXG,SAKFC,EAAe,SAAC3B,EAAMpC,GAC5B,IAAMgE,EAAY5B,EAAK/B,WAAaL,EAChC,OAAO,aACHK,WAAY2D,GACT5B,ICtFI6B,kBAAgB,CAC3B7B,KD0FW,WAA6C,IAA/B8B,EAA8B,uDAAtBjB,EAAckB,EAAQ,uCACvD,OAAQA,EAAO7C,MACX,IAAK,MAAkB,OAAOsC,EAAQM,EAAOC,EAAO5B,SACpD,IAAK,iBAAkB,OAAOkB,EAAcS,EAAOC,EAAO5B,SAC1D,IAAK,aAAkB,OAAOY,EAASe,EAAOC,EAAO5B,SACrD,IAAK,gBAAkB,OAAOmB,EAAYQ,EAAOC,EAAO5B,SACxD,IAAK,YAAkB,OAAO,2BAAI2B,GAAX,IAAkBpC,WAAYqC,EAAO5B,QAAQ6B,OAAO3C,MAAOyB,OAAQgB,EAAMhB,WAChG,IAAK,gBAAkB,OAAO,2BAAIgB,GAAX,IAAkB9D,YAAa+D,EAAO5B,QAAQ6B,OAAO3C,QAC5E,IAAK,gBAAkB,OAAOsC,EAAaG,EAAOC,EAAO5B,SAEzD,QACI,OAAO2B,MExFbG,EACgB,kBAAXC,QACPA,OAAOC,qCACHD,OAAOC,qCAAqC,IACvCC,IAEPC,EAAQC,YAAYC,EAAaN,EAAiBO,aAZ/B,SAAAH,GAAK,OAAI,SAAAI,GAAI,OAAI,SAAAV,GACtC,IAAMW,EAASD,EAAKV,GAEpB,OADAY,QAAQC,IAAI,aAAcP,EAAMQ,YACzBH,MAWPI,OAGEC,EACF,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACI,cAAC,EAAD,MAIRW,IAASC,OAAOF,EAAKG,SAASC,eAAe,SAC7C/C,M","file":"static/js/main.7c2f2ff2.chunk.js","sourcesContent":["import './App.css';\nimport React, {Component, Fragment} from \"react\";\nimport {connect} from 'react-redux'\nimport {\n  add,\n  clickDone,\n  clickDelete,\n  addTitle,\n  searchChange,\n  clickImportant,\n  filterChange,\n  // fetchPosts,\n\n} from './redux/actions/actions';\n\n\nclass App extends Component {\n\n  onSubmitForm = ev => {\n    ev.preventDefault();\n  }\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n    return items.filter(item => {\n      return item.title.toLowerCase().indexOf(term.toLowerCase()) > -1;\n    });\n  }\n\n  filters(items, filterNew) {\n    switch (filterNew) {\n      case 'all':\n        return items;\n      case 'active':\n        return items.filter(item => !item.done);\n      case 'done':\n        return items.filter(item => item.done);\n      case 'important':\n        return items.filter(item => item.important);\n      default:\n        return items;\n    }\n  }\n  // componentDidMount() {\n  //   this.props.onFetchPosts()\n  // }\n\n  render() {\n\n    const visibleItems = this.filters(this.search(this.props.todoArray, this.props.inputSearch), this.props.filterItem)\n    const elements = visibleItems.map(elem => {\n\n      let className = elem.done ? 'TodoList Done' : ' TodoList';\n      let clz = elem.important ? ' TodoList Important' : ' TodoList'\n\n      return (\n          <Fragment key={Math.random(elem.id)}>\n            <div className={'Flex'}>\n              <div className={className.concat(clz)}\n                   onClick={() => this.props.onClickDone(elem.id)}>\n                {elem.title}\n              </div>\n              <button onClick={() => this.props.onClickDelete(elem.id)} className={'Button'}>Delete</button>\n              <button onClick={() => this.props.onClickImportant(elem.id)} className={'Button'}>Важное\n              </button>\n            </div>\n          </Fragment>\n      );\n    });\n\n    const button = this.props.buttons.map(({elem, label}) => {\n\n      const isActive = this.props.filterItem === elem;\n      const clazz = isActive ? 'Btn-info' : 'Btn-outline-secondary'\n      return (\n\n          <button\n              type=\"button\"\n              className={`Button ${clazz}`}\n              onClick={() => this.props.onFilterChang(elem)}\n              key={label}\n          >\n            {label}\n          </button>\n      )\n    })\n\n    // const fetch = this.props.fetchedPosts.map((el, index) => {\n    //   return <div key={index}>{el.title}</div>\n    //\n    // })\n\n    return (\n\n        <div className={'App'}>\n\n          <h1>Мой список дел {this.props.todoArray.length}</h1>\n          <input type=\"text\" placeholder=\"Фильтрация списка\" value={this.props.inputSearch}\n                 onChange={this.props.onSearch}/>\n          <main className={'Flex'}>\n            {button}\n          </main>\n          <form onSubmit={this.onSubmitForm}>\n\n            <label htmlFor=\"title\">Дело</label>\n\n            <input type=\"text\" value={this.props.inputValue} onChange={this.props.onAddTitle}/>\n\n            <button disabled={!this.props.inputValue.length}\n                    onClick={() => this.props.onAdd(this.props.inputValue)} type=\"submit\">Add\n            </button>\n          </form>\n          {elements}\n          {/*{fetch}*/}\n        </div>\n    )\n  }\n}\n\nfunction mapStateToProps({todo}) {\n  return {\n    filterItem: todo.filterItem,\n    ...todo,\n  }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onAdd: (idn) => dispatch(add(idn)),\n    onClickDone: (idn) => dispatch(clickDone(idn)),\n    onClickImportant: (idn) => dispatch(clickImportant(idn)),\n    onClickDelete: (idn) => dispatch(clickDelete(idn)),\n    onAddTitle: (idn) => dispatch(addTitle(idn)),\n    onSearch: (idn) => dispatch(searchChange(idn)),\n    onFilterChang: (idn) => dispatch(filterChange(idn)),\n    // onFetchPosts: (w) => dispatch(fetchPosts(w))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n\n\n","\r\n\r\nexport function add(index) {\r\n    return {\r\n        type: 'ADD',\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport function clickDone(index) {\r\n    return {\r\n        type: 'CLICK_DONE',\r\n        payload: index\r\n    }\r\n}\r\n\r\nexport function clickDelete(i) {\r\n    return {\r\n        type: 'CLICK_DELETED',\r\n        payload: i\r\n    }\r\n}\r\nexport function addTitle(v) {\r\n    return {\r\n        type: 'ADD_TITLE',\r\n        payload: v\r\n    }\r\n}\r\n\r\nexport function searchChange(v) {\r\n    return {\r\n        type: 'SEARCH-CHANGE',\r\n        payload: v\r\n    }\r\n}\r\n\r\nexport function clickImportant(v) {\r\n    return {\r\n        type: 'ITEM_IMPORTANT',\r\n        payload: v\r\n    }\r\n}\r\n\r\nexport function filterChange(v) {\r\n    return {\r\n        type: 'FILTER_FILTER',\r\n        payload: v\r\n    }\r\n}\r\n\r\n// export function fetchPosts() {\r\n//     return async dispatch => {\r\n//        const res = await fetch('https://jsonplaceholder.typicode.com/posts?_limit=0')\r\n//         const json = await res.json()\r\n//         dispatch({  type: 'FETCH_POSTS', payload: json})\r\n//\r\n//     }\r\n// }\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    itemId: 100,\r\n    inputValue: '',\r\n    inputSearch: '',\r\n    filterItem: 'all',\r\n    todoArray: [\r\n        {id: 1, important: false, done: false, title: 'Mazda'},\r\n        {id: 2, important: false, done: false, title: 'Opel'},\r\n        {id: 3, important: false, done: false, title: 'Reno'}\r\n    ],\r\n    buttons: [\r\n        {elem: 'all', label: 'Все'},\r\n        {elem: 'active', label: 'Активные'},\r\n        {elem: 'done', label: 'Завершённые'},\r\n        {elem: 'important', label: 'Важные'}\r\n    ],\r\n    // fetchedPosts: []\r\n}\r\nconst itemDone = (todo, id) => {\r\n    const ind = todo.todoArray.findIndex(el => el.id === id);\r\n    const newItem = {...todo.todoArray[ind], done: !todo.todoArray[ind].done};\r\n    const newArray = [...todo.todoArray.slice(0, ind), newItem, ...todo.todoArray.slice(ind + 1)];\r\n    return {\r\n        todoArray: newArray,\r\n        itemId: todo.itemId++,\r\n        inputValue: todo.inputValue,\r\n        inputSearch: todo.inputSearch,\r\n        buttons: todo.buttons,\r\n        filterItem: todo.filterItem,\r\n        // fetchedPosts: todo.fetchedPosts\r\n    };\r\n};\r\n\r\nconst itemImportant = (todo, id) => {\r\n    const ind = todo.todoArray.findIndex(el => el.id === id);\r\n    const newItem = {...todo.todoArray[ind], important: !todo.todoArray[ind].important};\r\n    const newArray = [...todo.todoArray.slice(0, ind), newItem, ...todo.todoArray.slice(ind + 1)];\r\n    return {\r\n        todoArray: newArray,\r\n        itemId: todo.itemId++,\r\n        inputValue: todo.inputValue,\r\n        inputSearch: todo.inputSearch,\r\n        buttons: todo.buttons,\r\n        filterItem: todo.filterItem,\r\n        // fetchedPosts: todo.fetchedPosts\r\n    };\r\n};\r\n\r\nconst itemDeleted = (todo, id) => {\r\n    const ind = todo.todoArray.findIndex(el => el.id === id);\r\n    const newArray = [...todo.todoArray.slice(0, ind), ...todo.todoArray.slice(ind + 1)];\r\n    return {\r\n        ...todo,\r\n        todoArray: newArray,\r\n        inputSearch: todo.inputSearch,\r\n        buttons: todo.buttons,\r\n        filterItem: todo.filterItem,\r\n        // fetchedPosts: todo.fetchedPosts\r\n    };\r\n}\r\n\r\nconst itemAdd = (todo, id) => {\r\n    const ind = todo.todoArray.findIndex(el => el.id === id);\r\n\r\n        const newItemTitle = {\r\n            id: todo.itemId++,\r\n            important: false,\r\n            done: false,\r\n            title: todo.inputValue,\r\n            buttons: todo.buttons,\r\n            // filterItem: todo.filterItem\r\n        };\r\n\r\n\r\n        const inp = todo.inputValue = ''\r\n        const newArray = [newItemTitle, ...todo.todoArray.slice(ind + 1)]\r\n\r\n    return {\r\n        ...todo,\r\n        todoArray: newArray,\r\n        inp,\r\n        // fetchedPosts: todo.fetchedPosts\r\n    };\r\n};\r\n\r\nconst filterChange = (todo, filters) => {\r\nconst newFilter = todo.filterItem = filters\r\n    return {\r\n        filterItem: newFilter,\r\n        ...todo,\r\n        // fetchedPosts: todo.fetchedPosts\r\n    }\r\n}\r\n\r\nexport default function todo(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'ADD':            return itemAdd(state, action.payload);\r\n        case 'ITEM_IMPORTANT': return itemImportant(state, action.payload);\r\n        case 'CLICK_DONE':     return itemDone(state, action.payload);\r\n        case 'CLICK_DELETED':  return itemDeleted(state, action.payload);\r\n        case 'ADD_TITLE':      return {...state, inputValue: action.payload.target.value, itemId: state.itemId++};\r\n        case 'SEARCH-CHANGE':  return {...state, inputSearch: action.payload.target.value};\r\n        case 'FILTER_FILTER':  return filterChange(state, action.payload);\r\n        // case 'FETCH_POSTS':    return {...state, fetchedPosts: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","import {combineReducers} from 'redux'\r\nimport todo from './reducers/reducer-todo'\r\n\r\nexport default combineReducers({\r\n    todo\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore, applyMiddleware, compose} from 'redux'\nimport {Provider} from 'react-redux'\nimport Thunk from 'redux-thunk'\nimport rootReducer from './redux/rootReducer'\n\n\nconst loggerMiddleware = store => next => action => {\n    const result = next(action)\n    console.log('Middleware', store.getState())\n    return result\n}\n\nconst composeEnhancers =\n    typeof window === 'object' &&\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        }) : compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(\n    loggerMiddleware,\n    Thunk\n)))\n\nconst app = (\n    <Provider store={store}>\n        <App/>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}